import{_ as i,c as a,o as n,ax as h}from"./chunks/framework.CJlX88Tx.js";const g=JSON.parse('{"title":"","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"minVue/minVue.md","filePath":"minVue/minVue.md","lastUpdated":null}'),k={name:"minVue/minVue.md"};function l(p,s,t,E,e,r){return n(),a("div",null,s[0]||(s[0]=[h('<h4 id="shapeflags-的位运算原理" tabindex="-1">ShapeFlags 的位运算原理 <a class="header-anchor" href="#shapeflags-的位运算原理" aria-label="Permalink to &quot;ShapeFlags 的位运算原理&quot;">​</a></h4><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ShapeFlags</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  element: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  stateful_component: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  text_children: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  array_children: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">不够高效，考虑使用位运算的方式来替代</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0000</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 0001</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> → element</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0010</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> → stateful</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> → text_children</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> → array_children</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">上述为js的位运算，为什么0001表示element，不是1000</span></span></code></pre></div><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">在 JavaScript（以及大多数编程语言）中，当使用位运算来表示标志或选项时，每个标志通常从最低有效位（最右边的位）开始分配一个唯一的位位置。</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">这意味着第一个标志用 </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">`1`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">（二进制 </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">`0001`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">）表示，第二个标志用 </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">`2`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">（二进制 </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">`0010`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">），第三个标志用 </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">`4`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">（二进制 </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">`0100`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">），以此类推。</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">每个标志对应于 </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 的幂，确保每个标志都有一个唯一的位位置，便于通过组合这些位来唯一识别标志的组合。</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">以下是为什么 </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">`0001`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 表示 </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">`element`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 而不是 </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">`1000`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 的原因：</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> **</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">位位置和 </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 的幂</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">**</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">：</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">   -</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> **</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">最低有效位（</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">LSB</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">）</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">**</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">：二进制数中最右边的位，代表 \\(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">^</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\\)。</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">   -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 每向左移动一位，代表下一个更高的 </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 的幂：</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">     -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 第二位：\\(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">^</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\\)（二进制 </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">`0010`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">）</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">     -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 第三位：\\(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">^</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\\)（二进制 </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">`0100`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">）</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">     -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 第四位：\\(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">^</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\\)（二进制 </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">`1000`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">）</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2.</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> **</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">标志的分配</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">**</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">：</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">   -</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> **</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Element</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">**</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">：分配给最低有效位，表示值 </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">`1`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">（二进制 </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">`0001`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">）。</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">   -</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> **</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Stateful Component</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">**</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">：分配给第二位，值为 </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">`2`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">（二进制 </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">`0010`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">）。</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">   -</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> **</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Text Children</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">**</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">：分配给第三位，值为 </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">`4`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">（二进制 </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">`0100`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">）。</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">   -</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> **</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Array Children</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">**</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">：分配给第四位，值为 </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">`8`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">（二进制 </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">`1000`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">）。</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3.</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> **</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">为什么从最低有效位开始</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">**</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">：</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">   -</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> **</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">效率</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">**</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">：从最低有效位开始可以高效地利用位，并方便地使用位或（</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">`|`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">）操作来组合标志。</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">   -</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> **</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">惯例</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">**</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">：在编程中，从最低有效位开始分配标志是一种常见的惯例，有助于可读性和一致性。</span></span>\n<span class="line"></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4.</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> **</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">组合标志</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">**</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">：</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">   -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 通过使用 </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 的幂，你可以在不产生冲突的情况下组合多个标志：</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">     -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 例如，一个既是 </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">`element`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 又有 </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">`text_children`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 的标志值为 </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">`1 | 4 = 5`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">（二进制 </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">`0101`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">）。</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">     -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 这个唯一的组合允许你使用位与（</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">`&amp;`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">）操作来检查特定的标志。</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">```</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">#### 运算原理</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">```</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">js</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (两位都为0，才为0)    </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 修改</span></span>\n<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&amp;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (两位都为1，才为1)    </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 查找</span></span>\n<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">```</span></span></code></pre></div>',3)]))}const y=i(k,[["render",l]]);export{g as __pageData,y as default};
